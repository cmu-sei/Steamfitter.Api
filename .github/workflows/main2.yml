# This is a basic workflow to help you get started with Actions

name: Build Client

on: 
  workflow_dispatch:
    inputs:
      clientVersion:
        description: 'Version of the Client package'     
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - uses: actions/checkout@v2

      - name: Build Steamfitter.Api.Client
        run: |
          cd Steamfitter.Api
          dotnet build -c Release                                                   \
          /p:version=${{ github.event.inputs.clientVersion }}                       \
          /p:authors="Carnegie Mellon University/Software Engineering Institute"    \
          /p:owners="Carnegie Mellon University/Software Engineering Institute"     \
          /p:description="AutoRest generated client for Crucible's Steamfitter.Api"   
          
      - name: Run Swagger
        run: |
          cd Steamfitter.Api
          ls -lahR
          dotnet swagger tofile --output ../Steamfitter.Api.Client/swagger.json bin/Release/*/Steamfitter.Api.dll v1
                    
      - name: Run AutoRest
        run: |
          npm install autorest@3.0.6247
          find . -name "*autorest*"
          cd Steamfitter.Api.Client

      - name: Create NuGet Package
        run: |
          cd Steamfitter.Api.Client
          dotnet pack -c Release /p:version=${{ github.event.inputs.clientVersion }} --include-source
          mv Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg.bak
          unzip Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg.bak -d tmp
          chmod -R 755 tmp
          cd tmp
          sed -i '/<\/version>/a \    <license type="expression">MIT<\/license>' Steamfitter.Api.Client.nuspec
          sed -i '/<\/version>/a \    <licenseUrl>https:\/\/licenses.nuget.org\/MIT<\/licenseUrl>' Steamfitter.Api.Client.nuspec
          sed -i '/<\/version>/a \    <projectUrl>https:\/\/github.com\/cmu-sei\/crucible<\/projectUrl>' Steamfitter.Api.Client.nuspec
          sed -i '/<\/version>/a \    <repository type="git" url="https:\/\/github.com\/cmu-sei\/crucible.git" \/>' Steamfitter.Api.Client.nuspec
          zip -r ../Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg *
     
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: steamfitter.api.client.${{ github.event.inputs.clientVersion }}
          release_name: Steamfitter.Api.Client ${{ github.event.inputs.clientVersion }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Steamfitter.Api.Client/bin/Release/Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg
          asset_name: Steamfitter.Api.Client.${{ github.event.inputs.clientVersion }}".nupkg
          asset_content_type: application/zip

